import{_ as s,o as a,c as n,a as l}from"./app.029ff587.js";const e=JSON.parse('{"title":"服务端","description":"","frontmatter":{"title":"服务端"},"headers":[{"level":2,"title":"项目结构","slug":"项目结构"},{"level":2,"title":"应用结构","slug":"应用结构"},{"level":2,"title":"开发","slug":"开发"},{"level":3,"title":"API 接口","slug":"api-接口"},{"level":3,"title":"图形化查询","slug":"图形化查询"},{"level":2,"title":"Reference","slug":"reference"}],"relativePath":"dev/server.md"}'),p={name:"dev/server.md"},t=[l('<h1 id="mserver-next-v3" tabindex="-1">MServer Next (v3) <a class="header-anchor" href="#mserver-next-v3" aria-hidden="true">#</a></h1><blockquote><p><strong>适用于 Mix Space 的 RESTful API &amp; GraphQL 服务端应用；基于 <a href="https://github.com/nestjs/nest" target="_blank" rel="noreferrer"><code>nestjs</code></a> (nodejs)，需安装 <a href="https://www.mongodb.com/" target="_blank" rel="noreferrer"><code>MongoDB</code></a> 和 <a href="https://redis.io/" target="_blank" rel="noreferrer"><code>Redis</code></a> 方可完整运行。</strong></p></blockquote><blockquote><p>v3 还是使用 <a href="https://github.com/nestjs/nest" target="_blank" rel="noreferrer"><code>nestjs</code></a> 进行重构，之前的版本在 <a href="https://github.com/mx-space/server" target="_blank" rel="noreferrer">此仓库</a>。</p></blockquote><p>配合相关项目一起使用:</p><ul><li><strong>SSR Blog</strong>: <ul><li><a href="https://github.com/mx-space/kami" target="_blank" rel="noreferrer">Kami</a> powered by NextJS (一个走可爱风路线的个人空间)</li><li>未来会变多吗</li></ul></li><li><strong>Admin</strong>: <a href="https://github.com/mx-space/admin-next" target="_blank" rel="noreferrer">Admin</a></li><li>未来可期</li></ul><p>接口文档通过开发环境 Swagger 查阅，接口大概有 120+ 个</p><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-hidden="true">#</a></h2><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">.</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── app.config.ts                 # 主程序配置，数据库、程序、第三方，一切可配置项</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── app.controller.ts             # 主程序根控制器</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── app.module.ts                 # 主程序根模块，负责各业务模块的聚合</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── app.resolver.ts               # 主程序根 GraphQL Resolver</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── common                        # 存放中间件</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── adapt                     # Fastify 适配器的配置</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── decorator                 # 业务装饰器</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── exceptions                # 自定义异常</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── filters                   # 异常处理器</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── guard                     # 守卫与鉴权</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── interceptors              # 拦截器, 数据过滤与响应格式化处理</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── middlewares               # 传统意义上的中间件</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── pipes                     # 管道</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── constants                     # 常量</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── article.constant.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── cache.constant.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── meta.constant.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── path.constant.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── system.constant.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── main.ts                       # 引入配置，启动主程序，引入各种全局服务</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── modules                       # 业务逻辑模块</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── aggregate</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── analyze</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── auth</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── backup</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── category</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── comment</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── configs</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── feed</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── health</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── init</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── link</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── markdown</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── note</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── option</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── page</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── pageproxy</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── post</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── project</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── recently</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── say</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── search</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── sitemap</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── tool</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── user</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── processors                      # 核心辅助模块</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── cache                       # Redis 缓存相关</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── database                    # Mongo 数据库相关</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── gateway                     # Socket.IO 相关</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── helper                      # 辅助类</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── logger                      # 自定义 Logger</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── shared                          # 通用模型</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── dto                         # 数据验证模型</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── interface                   # 接口</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── model                       # 基本数据模型</span></span>\n<span class="line"><span style="color:#A6ACCD;">├── utils                           # 工具类</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── crud.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── dayjs.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── global.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── index.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── ip.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── nest.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── pic.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── query.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── redis.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── system.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── time.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   ├── transfrom.util.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;">│   └── validator</span></span>\n<span class="line"><span style="color:#A6ACCD;">└── zx.global.ts</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="应用结构" tabindex="-1">应用结构 <a class="header-anchor" href="#应用结构" aria-hidden="true">#</a></h2><ul><li><p>请求处理流程</p><ol><li>request：收到请求</li><li>middleware：中间件过滤爬虫 PHP 肉鸡扫描路径，记录访问历史</li><li>guard：守卫过滤（鉴权）和角色附加</li><li>interceptor:before：只用于 DEBUG 请求计时</li><li>pipe：校验请求数据，过滤未知数据，非法类型抛错 422</li><li>controller &amp; resolver：业务控制器</li><li>service：业务服务</li><li>interceptor:after：数据流拦截器（格式化数据）、请求缓存</li><li>filter：捕获以上所有流程中出现的异常，如果任何一个环节抛出异常，则返回错误</li></ol></li><li><p>拦截器流向</p></li></ul><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">ResponseInterceptor -&gt; JSONSerializeInterceptor -&gt; CountingInterceptor -&gt; HttpCacheInterceptor</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li><p><a href="https://github.com/mx-space/server-next/tree/master/src/modules" target="_blank" rel="noreferrer">业务逻辑模块</a></p><ol><li>[Aggregate] 聚合</li><li>[Analyze] 数据统计</li><li>[Auth] 认证</li><li>[Backup] 备份</li><li>[Category] 分类</li><li>[Commnet] 评论</li><li>[Configs] 读取配置项</li><li>[Feed] RSS</li><li>[Health] 应用健康检查与日志相关</li><li>[Init] 初始化相关</li><li>[Link] 友链</li><li>[Markdown] Markdown 解析导入导出解析相关</li><li>[Note] 日记</li><li>[Option] 设置</li><li>[Page] 独立页面</li><li>[PageProxy] 反代管理页</li><li>[Post] 博文</li><li>[Project] 项目</li><li>[Recently] 最近</li><li>[Say] 说说</li><li>[Search] 搜索</li><li>[Sitemap] 站点地图</li><li>[Tool] 工具接口</li><li>[User] 用户</li></ol></li><li><p><a href="https://github.com/mx-space/server-next/tree/master/src/processors" target="_blank" rel="noreferrer">核心辅助模块 processors</a></p><ol><li>[cache] Redis 缓存相关</li><li>[database] 数据库相关</li><li>[gateway] <a href="http://Socket.IO" target="_blank" rel="noreferrer">Socket.IO</a> 相关 <ul><li>用户端</li><li>管理端</li><li>实时通知</li></ul></li><li>[helper] 辅助类</li><li>[CountingService] 提供更新阅读计数</li><li>[CronService] 维护管理计划任务 <ul><li>自动备份</li><li>推送百度搜索</li><li>清除缓存</li><li>etc.</li></ul></li><li>[EmailService] 送信服务</li><li>[HttpService] 请求模块</li><li>[ImageService] 图片处理</li><li>[TqService] 任务队列</li><li>[UploadService] 上传服务</li><li>[AssetService] 获取本地资源服务</li></ol></li></ul><h2 id="开发" tabindex="-1">开发 <a class="header-anchor" href="#开发" aria-hidden="true">#</a></h2><p>安装好 <code>redis</code> 、<code>mongodb</code></p><p>克隆仓库</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/mx-space/server-next.git --depth 1 server</span></span>\n<span class="line"></span></code></pre></div><p>更换到稳定分支</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> server </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> git fetch --tags </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> git checkout </span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">git rev-list --tags --max-count=1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> ..</span></span>\n<span class="line"></span></code></pre></div><p>构建，启动 server</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">pnpm i</span></span>\n<span class="line"><span style="color:#A6ACCD;">pnpm start</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="api-接口" tabindex="-1">API 接口 <a class="header-anchor" href="#api-接口" aria-hidden="true">#</a></h3><p>浏览器访问 <a href="http://127.0.0.1/api-docs" target="_blank" rel="noreferrer">http://127.0.0.1/api-docs</a> 可以看到 Server 提供的 API 接口。</p><p>你还可以对每一个接口进行测试。</p><h3 id="图形化查询" tabindex="-1">图形化查询 <a class="header-anchor" href="#图形化查询" aria-hidden="true">#</a></h3><p><a href="http://127.0.0.1/graphql" target="_blank" rel="noreferrer">http://127.0.0.1/graphql</a></p><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-hidden="true">#</a></h2><p>项目参考了 <a href="https://github.com/surmon-china/nodepress" target="_blank" rel="noreferrer">nodepress</a></p>',27)];const r=s(p,[["render",function(s,l,e,p,r,o){return a(),n("div",null,t)}]]);export{e as __pageData,r as default};
