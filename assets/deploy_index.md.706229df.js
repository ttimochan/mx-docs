import{_ as s,o as a,c as n,a as e}from"./app.7f8628ac.js";const p=JSON.parse('{"title":"Docker 部署","description":"","frontmatter":{},"headers":[{"level":2,"title":"准备","slug":"准备"},{"level":3,"title":"安装 docker","slug":"安装-docker"},{"level":3,"title":"安装 Node.js 和 zx","slug":"安装-node-js-和-zx"},{"level":2,"title":"克隆仓库","slug":"克隆仓库"},{"level":2,"title":"部署整个环境","slug":"部署整个环境"},{"level":2,"title":"仅部署服务和主站前端","slug":"仅部署服务和主站前端"},{"level":2,"title":"仅部署服务","slug":"仅部署服务"}],"relativePath":"deploy/index.md"}'),l={name:"deploy/index.md"},o=[e('<h1 id="docker-部署" tabindex="-1">Docker 部署 <a class="header-anchor" href="#docker-部署" aria-hidden="true">#</a></h1><blockquote><p>使用 Docker Compose 可以很容易的部署整个环境。</p></blockquote><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>❗ 注意：文档未考虑对 Windows 的支持工作，Windows 的使用者请自行处理兼容性问题；</p><p>​ Linux 内核版本 &gt; 4.18，建议使用 5.X 版本的内核；内存 &gt; 1 GiB ！</p></div><p>其他安装方法：<a href="/deploy/core/core">从零开始·Core 部署</a>，如果遇到自己不能解决的问题，参阅文档无果后，请提 <a href="https://github.com/mx-space/docs/issues" target="_blank" rel="noreferrer">issue</a>！</p><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-hidden="true">#</a></h2><h3 id="安装-docker" tabindex="-1">安装 docker <a class="header-anchor" href="#安装-docker" aria-hidden="true">#</a></h3><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">curl -fsSL https://get.docker.com </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> bash -s docker</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;"># 如果安装比较慢，推荐使用以下命令</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">curl -fsSL https://get.docker.com </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> bash -s docker --mirror Aliyun</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><p>检查是否安装完成</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">docker compose version</span></span>\n<span class="line"></span></code></pre></div><p>正常输出版本号即可。</p><h3 id="安装-node-js-和-zx" tabindex="-1">安装 Node.js 和 zx <a class="header-anchor" href="#安装-node-js-和-zx" aria-hidden="true">#</a></h3><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">curl -L https://raw.githubusercontent.com/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#676E95;"># 如果无法访问 Github raw 的话就执行下面这条命令</span></span>\n<span class="line"><span style="color:#676E95;"># curl -L https://raw.fastgit.org/tj/n/master/bin/n -o n</span></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> N_PREFIX=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">HOME/.n</span></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">N_PREFIX/bin:</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">PATH</span></span>\n<span class="line"><span style="color:#676E95;"># export N_NODE_MIRROR=https://npmmirror.com/mirrors/node  #如果官方源下载慢的话可以执行这条换国内源</span></span>\n<span class="line"><span style="color:#A6ACCD;">bash n lts</span></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> N_PRESERVE_NPM=1</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm i -g npm@latest</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm i -g yarn zx pnpm n</span></span>\n<span class="line"></span></code></pre></div><h2 id="克隆仓库" tabindex="-1">克隆仓库 <a class="header-anchor" href="#克隆仓库" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/mx-space/docker --depth=1</span></span>\n<span class="line"></span></code></pre></div><h2 id="部署整个环境" tabindex="-1">部署整个环境 <a class="header-anchor" href="#部署整个环境" aria-hidden="true">#</a></h2><p>所部署的环境：kami + mx-server + caddy2</p><p>在此之前，你需要把域名指向当前服务器 IP。</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> docker</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install</span></span>\n<span class="line"><span style="color:#A6ACCD;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre></div><p>实例输入：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#A6ACCD;">你的邮箱为: (若该步留空，则不部署 Caddy 服务): tukon@gmail.com</span></span>\n<span class="line"><span style="color:#A6ACCD;">是否部署 Caddy 2.0？ (y/n): y</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>待流程执行完毕，进入 <code>https://你的域名/proxy/qaqdmin</code></p><p>建议：</p><p>移动到页面，新建两个页面 第一个路由为 <code>message</code> ，第二个路由为 <code>about</code> ，标题任意。</p><h2 id="仅部署服务和主站前端" tabindex="-1">仅部署服务和主站前端 <a class="header-anchor" href="#仅部署服务和主站前端" aria-hidden="true">#</a></h2><p>所部署的环境：kami + mx-server</p><p>你不需要 IP 指向。但是需要手动处理服务器反代。</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> docker</span></span>\n<span class="line"><span style="color:#A6ACCD;">npm install</span></span>\n<span class="line"><span style="color:#A6ACCD;">zx ./build.mjs</span></span>\n<span class="line"></span></code></pre></div><p>实例输入：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">你的域名为：（需要提前绑定）: innei.ren</span></span>\n<span class="line"><span style="color:#A6ACCD;">你的邮箱为: (此步留空，则不部署 Caddy 服务):</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>待流程执行完毕，进入 <code>http://127.0.0.1:2333/proxy/qaqdmin</code>。</p><h2 id="仅部署服务" tabindex="-1">仅部署服务 <a class="header-anchor" href="#仅部署服务" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">wget https://fastly.jsdelivr.net/gh/mx-space/mx-server@master/docker-compose.yml</span></span>\n<span class="line"><span style="color:#A6ACCD;">docker compose up -d</span></span>\n<span class="line"></span></code></pre></div><p>待流程执行完毕，进入 <code>http://127.0.0.1:2333/proxy/qaqdmin</code>。</p>',33)];const c=s(l,[["render",function(s,e,p,l,c,t){return a(),n("div",null,o)}]]);export{p as __pageData,c as default};
